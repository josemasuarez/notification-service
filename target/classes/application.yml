spring:
  application:
    name: notification-service

  datasource:
    url: jdbc:postgresql://${SPRING_DATASOURCE_URL:localhost:5433}/notification_service
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:}
      timeout: ${SPRING_REDIS_TIMEOUT:5000}
      connect-timeout: ${SPRING_REDIS_CONNECT_TIMEOUT:5000}
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus, info

  tracing:
    sampling:
      probability: 1.0
    otlp:
      endpoint: http://localhost:4317  # apunta al Datadog Agent u OTEL Collector

  datadog:
    metrics:
      export:
        enabled: true
        api-key: ${DD_API_KEY}
        step: 30s

logging:
  level:
    root: INFO
    com.example.notificationservice: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} [%X{correlationId}] - %msg%n"
